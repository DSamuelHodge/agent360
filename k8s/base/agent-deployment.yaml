apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent360
  namespace: agent360
spec:
  replicas: 3
  selector:
    matchLabels:
      app: agent360
  template:
    metadata:
      labels:
        app: agent360
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
    spec:
      containers:
      - name: agent360
        image: agent360:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: agent360-config
              key: environment
        - name: CASSANDRA_HOSTS
          valueFrom:
            configMapKeyRef:
              name: agent360-config
              key: cassandra_hosts
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: agent360-config
              key: redis_host
        - name: TEMPORAL_HOST
          valueFrom:
            configMapKeyRef:
              name: agent360-config
              key: temporal_host
        envFrom:
        - secretRef:
            name: agent360-secrets
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
      volumes:
      - name: config-volume
        configMap:
          name: agent360-config
