apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-temporal
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: {{ .Release.Name }}-temporal
  replicas: {{ .Values.temporal.replicas | default 1 }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-temporal
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-temporal
    spec:
      containers:
        - name: temporal
          image: temporalio/server:{{ .Values.temporal.version | default "1.22.3" }}
          ports:
            - containerPort: 7233
              name: grpc
            - containerPort: 7234
              name: metrics
          env:
            - name: TEMPORAL_PERSISTENCE_DEFAULT_STORE
              value: postgresql
            - name: TEMPORAL_PERSISTENCE_POSTGRESQL_HOST
              value: {{ .Release.Name }}-postgresql
            - name: TEMPORAL_PERSISTENCE_POSTGRESQL_PORT
              value: "5432"
            - name: TEMPORAL_PERSISTENCE_POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: username
            - name: TEMPORAL_PERSISTENCE_POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: password
            - name: TEMPORAL_PERSISTENCE_POSTGRESQL_DATABASE
              value: temporal
          resources:
            requests:
              cpu: {{ .Values.temporal.resources.requests.cpu | default "500m" }}
              memory: {{ .Values.temporal.resources.requests.memory | default "1Gi" }}
            limits:
              cpu: {{ .Values.temporal.resources.limits.cpu | default "2" }}
              memory: {{ .Values.temporal.resources.limits.memory | default "2Gi" }}
          livenessProbe:
            tcpSocket:
              port: grpc
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: grpc
            initialDelaySeconds: 15
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-temporal
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: {{ .Release.Name }}-temporal
  ports:
    - port: 7233
      targetPort: grpc
      name: grpc
    - port: 7234
      targetPort: metrics
      name: metrics
  type: ClusterIP
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ .Release.Name }}-temporal
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-temporal
  endpoints:
    - port: metrics
      interval: 15s
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ .Release.Name }}-temporal-alerts
  namespace: {{ .Release.Namespace }}
spec:
  groups:
    - name: temporal.rules
      rules:
        - alert: TemporalServerDown
          expr: up{job="temporal"} == 0
          for: 5m
          labels:
            severity: critical
          annotations:
            summary: Temporal server is down
            description: Temporal server has been down for more than 5 minutes
            
        - alert: TemporalHighErrorRate
          expr: |
            sum(rate(temporal_workflow_failed_total[5m])) by (namespace)
            / 
            sum(rate(temporal_workflow_completed_total[5m])) by (namespace)
            > 0.1
          for: 15m
          labels:
            severity: warning
          annotations:
            summary: High workflow failure rate
            description: Workflow failure rate is above 10% in namespace {{ $labels.namespace }}
            
        - alert: TemporalHighLatency
          expr: |
            histogram_quantile(0.95, sum(rate(temporal_workflow_end_to_end_latency_bucket[5m])) by (le))
            > 300
          for: 15m
          labels:
            severity: warning
          annotations:
            summary: High workflow latency
            description: 95th percentile workflow latency is above 5 minutes
---
apiVersion: grafana.integreatly.org/v1alpha1
kind: GrafanaDashboard
metadata:
  name: {{ .Release.Name }}-temporal
  namespace: {{ .Release.Namespace }}
spec:
  json: |
    {
      "annotations": {
        "list": []
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": null,
      "links": [],
      "panels": [
        {
          "title": "Workflow Success Rate",
          "type": "gauge",
          "datasource": "Prometheus",
          "targets": [
            {
              "expr": "sum(rate(temporal_workflow_completed_total[5m])) / sum(rate(temporal_workflow_started_total[5m]))",
              "legendFormat": "Success Rate"
            }
          ],
          "options": {
            "maxValue": 1,
            "minValue": 0,
            "thresholds": [
              { "color": "red", "value": null },
              { "color": "yellow", "value": 0.9 },
              { "color": "green", "value": 0.95 }
            ]
          }
        },
        {
          "title": "Workflow Latency",
          "type": "graph",
          "datasource": "Prometheus",
          "targets": [
            {
              "expr": "histogram_quantile(0.95, sum(rate(temporal_workflow_end_to_end_latency_bucket[5m])) by (le))",
              "legendFormat": "p95 Latency"
            }
          ]
        },
        {
          "title": "Active Workflows",
          "type": "graph",
          "datasource": "Prometheus",
          "targets": [
            {
              "expr": "sum(temporal_workflow_active) by (namespace)",
              "legendFormat": "{{ namespace }}"
            }
          ]
        },
        {
          "title": "Error Rate",
          "type": "graph",
          "datasource": "Prometheus",
          "targets": [
            {
              "expr": "sum(rate(temporal_workflow_failed_total[5m])) by (namespace)",
              "legendFormat": "{{ namespace }}"
            }
          ]
        }
      ],
      "refresh": "10s",
      "schemaVersion": 16,
      "style": "dark",
      "tags": ["temporal", "workflow"],
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "5s",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ]
      },
      "timezone": "browser",
      "title": "Temporal Metrics",
      "version": 0
    }
